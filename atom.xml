<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>麦 子</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-07-18T15:32:48.178Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Maizi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何向github提交代码？</title>
    <link href="http://yoursite.com/2017/07/18/%E5%A6%82%E4%BD%95%E5%90%91github%E6%8F%90%E4%BA%A4%E4%BB%A3%E7%A0%81%EF%BC%9F/"/>
    <id>http://yoursite.com/2017/07/18/如何向github提交代码？/</id>
    <published>2017-07-18T14:31:13.000Z</published>
    <updated>2017-07-18T15:32:48.178Z</updated>
    
    <content type="html"><![CDATA[<p>有Github账号，就可以提交代码了吗？(一开始我也是这么认为的)<br>Github一般都是基于SSH授权的，本文针对 <strong>Windows</strong> 系统，记录了如何向Github提交代码。</p>
<h4 id="安装Git工具"><a href="#安装Git工具" class="headerlink" title="安装Git工具"></a>安装Git工具</h4><p>下载地址：<a href="https://git-for-windows.github.io/" target="_blank" rel="external">点我</a>下载后，一直默认 <strong>next</strong> 安装即可。<br>![][hexo/source/img/2017-07-18-001.png]</p>
<h4 id="创建新项目，copy地址"><a href="#创建新项目，copy地址" class="headerlink" title="创建新项目，copy地址"></a>创建新项目，copy地址</h4><p>进入Github首页，创建一个新的项目(具体教程见Github首页Read the guide)；点击 <strong>Clone or download</strong> 按钮，赋值出现的地址备之后用。<br>![copy地址][hexo/source/img/2017-07-18-002.png]</p>
<h4 id="生成SSH-key"><a href="#生成SSH-key" class="headerlink" title="生成SSH key"></a>生成SSH key</h4><p>在本地电脑中找到之前安装的git工具，双击里面的 <strong>git-bash.exe</strong> ![git-bash][hexo/source/img/2017-07-18-003.png]<br>输入命令：<strong>ssh</strong>，如果出现如下界面，则表示本电脑已经安装了SSH。<br>![成功界面][hexo/source/img/2017-07-18-004.png]<br>接着输入命令 <strong>ssh-keygen -t rsa</strong>(指定rsa算法生成密钥)，连续敲三个回车，生成两个文件： <strong>id_rsa</strong>(密钥)和 <strong>id_rsa.pub</strong>(公钥)，这两个文件都在c/Users/Administrator/.ssh目录下，可以用Sublime打开(其他也可以，这里请自行百度)。</p>
<h4 id="在Github上添加SSH-key"><a href="#在Github上添加SSH-key" class="headerlink" title="在Github上添加SSH key"></a>在Github上添加SSH key</h4><p>进入Github的设置页面，点击左侧选项栏中的 <strong>SSH and GPG keys</strong>，再点击 <strong>new SSH key</strong>，把上一步中的 <strong>id_rsa.pub</strong>(公钥)中的内容粘贴到 <strong>Key</strong> 那一栏， <strong>Title</strong> 栏不需要填写，直接点击 <strong>Add SSH key</strong> 即可。<br>![添加SSH key][hexo/source/img/2017-07-18-005.png]<br>这样，本地的id_rsa密钥和Github上的id_rsa.pub公钥就可以进行配对，授权成功才可以提交代码。<br>SSH key添加成功之后，输入命令： <strong>ssh -T git@github.com</strong> 进行测试，如果出现如下提示，则表示添加成功。<br>![提示][hexo/source/img/2017-07-18-006.png]</p>
<h4 id="提交代码"><a href="#提交代码" class="headerlink" title="提交代码"></a>提交代码</h4><p>首先，右键你要上传的项目，会出现两个选项：Git Gui Here和Git Bash Here，选择 <strong>Git Bash Here</strong> ，进入如下界面：这里Lottery就是我要上传的项目。<br>![Git Bash Here][hexo/source/img/2017-07-18-007.png]</p>
<h5 id="把Github上面的仓库clone到本地"><a href="#把Github上面的仓库clone到本地" class="headerlink" title="把Github上面的仓库clone到本地"></a>把Github上面的仓库clone到本地</h5><p>输入命令： <strong>git clone <a href="https://github.com/Maizi93/test.git" target="_blank" rel="external">https://github.com/Maizi93/test.git</a></strong> (这个地址就是之前复制备用的地址)，此时你会发现本地文件夹中会多出一个文件夹(test)，把项目文件夹中的其余所有，都赋值到这个多出来的文件夹(test)中。<br>![clone到本地][hexo/source/img/2017-07-18-008.png]  ![本地文件夹][/img/2017-07-18-009.png]</p>
<h5 id="提交并push到github上"><a href="#提交并push到github上" class="headerlink" title="提交并push到github上"></a>提交并push到github上</h5><p>依次输入以下命令：<br><strong>cd test</strong> ———— 进入test文件夹<br><strong>git add .</strong> ———— 把test文件夹下面的文件都添加进来， <em>注意：add后面还有一个点（.），千万别忘记了！</em><br><strong>git commit -m “提交信息”</strong> ———— “提交信息”里面换成你需要的，如”first commit”<br><strong>git push -u origin master</strong> ———— 把本地仓库push到github上面， <em>注意：这里需要你输入Github的账号和密码</em><br>![相关命令行][hexo/source/img/2017-07-18-010.png]</p>
<h5 id="完成代码提交"><a href="#完成代码提交" class="headerlink" title="完成代码提交"></a>完成代码提交</h5><p>到Github上test这个repository下面，就可以看到已经提交了你的项目相关内容。<br>![完成提交][hexo/source/img/2017-07-18-011.png]</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有Github账号，就可以提交代码了吗？(一开始我也是这么认为的)&lt;br&gt;Github一般都是基于SSH授权的，本文针对 &lt;strong&gt;Windows&lt;/strong&gt; 系统，记录了如何向Github提交代码。&lt;/p&gt;
&lt;h4 id=&quot;安装Git工具&quot;&gt;&lt;a href=&quot;
    
    </summary>
    
      <category term="前端工具" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>关于Hexo搭建博客的一些工具</title>
    <link href="http://yoursite.com/2017/07/17/%E5%85%B3%E4%BA%8EHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2017/07/17/关于Hexo搭建博客的一些工具/</id>
    <published>2017-07-17T14:18:35.000Z</published>
    <updated>2017-07-18T09:42:34.657Z</updated>
    
    <content type="html"><![CDATA[<h4 id="什么是Hexo"><a href="#什么是Hexo" class="headerlink" title="什么是Hexo?"></a>什么是Hexo?</h4><p>Hexo是一个快速、简洁且高效的博客框架。Hexo使用<a href="https://daringfireball.net/projects/markdown/" target="_blank" rel="external">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h4 id="Git简介"><a href="#Git简介" class="headerlink" title="Git简介"></a>Git简介</h4><h4 id="Git是什么？"><a href="#Git是什么？" class="headerlink" title="Git是什么？"></a>Git是什么？</h4><p>Git是目前世界上最先进的分布式版本控制系统。</p>
<h4 id="SVN-集中式-与Git-分布式-的最主要区别"><a href="#SVN-集中式-与Git-分布式-的最主要区别" class="headerlink" title="SVN(集中式)与Git(分布式)的最主要区别"></a>SVN(集中式)与Git(分布式)的最主要区别</h4><p>SVN是集中式版本控制系统，版本库几种放在中央服务器。干活的时候用到自己的电脑，首先要在中央服务器那里得到最新的版本，然后干活，干完后把自己做完的活推送到中央服务器。集中式版本控制系统必须联网才能工作，如果在局域网还可以，带宽够大，速度够快，如果在互联网下，如果网速慢的话，就难办了。</p>
<p>Git是分布式版本控制系统，没有中央服务器。每个人的电脑就是一个完整的版本库，工作的时候不需要联网。既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢？比如说自己在电脑上修改了文件A，其他人也在电脑上修改了文件A，这是，你们两只需把自己的修改推送给对方，就可以互相看到对方的修改了。</p>
<h4 id="Markdown编辑器"><a href="#Markdown编辑器" class="headerlink" title="Markdown编辑器"></a>Markdown编辑器</h4><p>Markdown是一种轻量级的标记语言，其用简单的标记语法便可以达到排版的目的，其可以使我们更加专注于内容的编写，而不需要过多的关注排版。支持Markdown的编辑器有好多，功能也不完全一致，有的是用来进行基本的写作，有的是用来写代码的，有的甚至只是博客平台配套的编辑器。</p>
<h4 id="Atom介绍"><a href="#Atom介绍" class="headerlink" title="Atom介绍"></a>Atom介绍</h4><p><a href="https://atom.io/" target="_blank" rel="external">Atom</a>是Github官网开发的一款可定制化的、跨平台的文本编辑器。有两点需要注意一下，一是Atom是由Github官网开发，二是其定制化程度非常高。前者的结果是编辑器对Github非常友好，如果项目托管在Github上的话，用Atom可以很方便地进行Git操作。后者的结果就是我们可以根据自己的需要定制自己的编辑器，使得自己的效率最大化，也让自己舒舒服服、开开心心地码代码。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;什么是Hexo&quot;&gt;&lt;a href=&quot;#什么是Hexo&quot; class=&quot;headerlink&quot; title=&quot;什么是Hexo?&quot;&gt;&lt;/a&gt;什么是Hexo?&lt;/h4&gt;&lt;p&gt;Hexo是一个快速、简洁且高效的博客框架。Hexo使用&lt;a href=&quot;https://dari
    
    </summary>
    
      <category term="搭建博客" scheme="http://yoursite.com/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
      <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
      <category term="Atom" scheme="http://yoursite.com/tags/Atom/"/>
    
  </entry>
  
</feed>
