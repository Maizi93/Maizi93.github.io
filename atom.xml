<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>麦 田</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-08-03T04:16:22.442Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Maizi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Hexo + Github搭建个人博客】——使用Hexo</title>
    <link href="http://yoursite.com/2017/08/03/%E3%80%90Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E3%80%91%E2%80%94%E2%80%94%E4%BD%BF%E7%94%A8Hexo/"/>
    <id>http://yoursite.com/2017/08/03/【Hexo-Github搭建个人博客】——使用Hexo/</id>
    <published>2017-08-03T02:52:11.000Z</published>
    <updated>2017-08-03T04:16:22.442Z</updated>
    
    <content type="html"><![CDATA[<p>在前一篇文章<a href="https://maizi93.github.io/2017/08/02/%E3%80%90Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E3%80%91%E2%80%94%E2%80%94%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#more" target="_blank" rel="external">环境搭建</a>中已经介绍过什么是Hexo，这里不再重复，直接进入主题。</p>
<p><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">Hexo官方使用文档</a></p>
<p>本文中提到的命令行都是使用 <strong>git bash</strong> 来执行。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h4><p>确保你的电脑上已经安装了 <strong>Git</strong> 和 <strong>Node.js</strong> （必备），如果没有安装，则参考<a href="https://maizi93.github.io/2017/08/02/%E3%80%90Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E3%80%91%E2%80%94%E2%80%94%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#more" target="_blank" rel="external">环境搭建</a>进行安装；如果已经安装了，接下来只需使用 <strong>npm</strong> 即可完成Hexo的安装。</p>
<h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo</div></pre></td></tr></table></figure>
<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><h4 id="创建文件夹，并初始化"><a href="#创建文件夹，并初始化" class="headerlink" title="创建文件夹，并初始化"></a>创建文件夹，并初始化</h4><p>创建一个文件夹，用于放置博客内容，路径自己选择。比如我的是：<code>E:\WEB\hexo</code>（名字可以随便取）。创建好之后，进入该目录。<br><img src="/img/2017-08-03_101.png" alt="进入目录"><br>接着输入以下命令行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure></p>
<p>hexo会自动下载一些文件到该目录，包括node_modules，目录结构如下图：<br><img src="/img/2017-08-03_102.png" alt="目录结构"></p>
<h4 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><p>在hexo目录下，执行以下命令，你会发现<code>E:\WEB\hexo</code> 目录下多了好多文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install</div></pre></td></tr></table></figure></p>
<h4 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g</div></pre></td></tr></table></figure>
<p><img src="/img/2017-08-03_104.png" alt="hexo g"><br>执行以上命令之后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到Github上 <strong>yourusername.github.io</strong> 的仓库上去的。（下图是后期截图，所以public文件夹中包含内容较多）<br><img src="/img/2017-08-03_103.png" alt="pubic文件夹"></p>
<h4 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s</div></pre></td></tr></table></figure>
<p>以上命令执行后，即可开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 即可看到内容，<code>Ctrl+c</code> 停止本地预览。<br><img src="/img/2017-08-03_105.png" alt="hexo s"></p>
<h4 id="部署博客到Github"><a href="#部署博客到Github" class="headerlink" title="部署博客到Github"></a>部署博客到Github</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d</div></pre></td></tr></table></figure>
<p><img src="/img/2017-08-03_106.png" alt="hexo d"><br>这一过程可能需要等待一下，安装成功后，打开<a href="http://yourusername.github.io，出现于本地预览相同的页面即表示成功部署到Github。" target="_blank" rel="external">http://yourusername.github.io，出现于本地预览相同的页面即表示成功部署到Github。</a></p>
<p>第一次初始化后，hexo已经自动写了一篇名为Hello World的文章，打开后如下图所示：<br><img src="/img/2017-08-03_107.png" alt="第一次初始化"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在前一篇文章&lt;a href=&quot;https://maizi93.github.io/2017/08/02/%E3%80%90Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E3%80%91%E
    
    </summary>
    
      <category term="博客搭建" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Next" scheme="http://yoursite.com/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>【Hexo + Github搭建个人博客】——环境搭建</title>
    <link href="http://yoursite.com/2017/08/02/%E3%80%90Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E3%80%91%E2%80%94%E2%80%94%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2017/08/02/【Hexo-Github搭建个人博客】——环境搭建/</id>
    <published>2017-08-02T14:45:51.000Z</published>
    <updated>2017-08-03T02:52:58.488Z</updated>
    
    <content type="html"><![CDATA[<h3 id="【写在前面】"><a href="#【写在前面】" class="headerlink" title="【写在前面】"></a>【写在前面】</h3><p>写这一系列文章的目的有两个：</p>
<ol>
<li>为了记录Hexo+Github搭建博客的全过程，巩固其中的知识点</li>
<li>跟大家分享一些过程中遇到过的坑，以免再踩（当然还有一些没有解决的，有知道的还请不吝赐教~）</li>
</ol>
<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>首先，大致了解一下Hexo和Github。</p>
<h4 id="Git简介"><a href="#Git简介" class="headerlink" title="Git简介"></a>Git简介</h4><p>Github 和 Git 是两回事。<br>Git 是目前世界上最先进的分布式版本控制系统（没有之一）；<br>Github 是在线的基于Git的代码托管服务。<br>参考：<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001373962845513aefd77a99f4145f0a2c7a7ca057e7570000" target="_blank" rel="external">廖雪峰的官方网站——Git简介</a>，<a href="https://www.baidu.com/s?wd=git%E5%92%8Cgithub%E7%AE%80%E4%BB%8B&amp;rsv_spt=1&amp;rsv_iqid=0xb351df750002e2fe&amp;issp=1&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=2&amp;ie=utf-8&amp;rqlang=cn&amp;tn=baiduhome_pg&amp;rsv_enter=1&amp;oq=Github%25E7%25AE%2580%25E4%25BB%258B&amp;rsv_t=cc8cXQDXbGqLD2SmPHOfOaSAO3ST6bnjKIIWMtRhLUR%2FOmmJooK6kyHd5BWrVflwnFYh&amp;inputT=763&amp;rsv_pq=e5b12abc000264e8&amp;rsv_sug3=9&amp;rsv_sug1=6&amp;rsv_sug7=100&amp;bs=Github%E7%AE%80%E4%BB%8B" target="_blank" rel="external">git和github简介</a></p>
<h4 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h4><p>官网是这么说的……<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo官网</a><br>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<p>简略地说，使用Hexo+Github搭建博客，就是利用Markdown进行博客的编写，通过Hexo框架解析生成靓丽的静态页面，然后部署到Github上供大家浏览。</p>
<h4 id="使用Hexo-Github搭建博客的好处"><a href="#使用Hexo-Github搭建博客的好处" class="headerlink" title="使用Hexo+Github搭建博客的好处"></a>使用Hexo+Github搭建博客的好处</h4><ul>
<li>免费方便，不需要服务器，不需要后台，无限流量</li>
<li>都是静态文件，访问速度快</li>
<li>数据绝对安全，基于Github的版本管理，可以恢复到任意版本</li>
<li>博客内容可以轻松打包、转义、发布到其他平台</li>
<li>可以随意绑定自己的域名</li>
</ul>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>在开始搭建博客之前，你必须做好以下准备：</p>
<ul>
<li>安装Git客户端</li>
<li>有Github账号（没有的话，到Github官网申请一个）</li>
<li>安装node.js、npm，并了解相关基础知识</li>
</ul>
<p>本次博客搭建使用的环境：</p>
<ul>
<li>Window7 X64</li>
<li>git版本：2.11.0.windows.1</li>
<li>node.js版本：v6.11.1</li>
<li>vpm版本：3.10.10</li>
<li>Hexo版本：3.3.7</li>
</ul>
<h4 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h4><p>安装Git，创建Github仓库以及相关的一些配置已经在<a href="http://blog.csdn.net/jzooo/article/details/46781805" target="_blank" rel="external">如何向github提交代码？</a>一文中详细给出，这里就不再重复了。</p>
<h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p>Node.js的安装过程很简单，一直点击 <strong>Next</strong> ，然后等待安装完成即可。<br><img src="/img/2017-08-02_001.png" alt="Node.js安装"><br><img src="/img/2017-08-02_002.png" alt="Node.js安装"></p>
<h4 id="验证软件的安装"><a href="#验证软件的安装" class="headerlink" title="验证软件的安装"></a>验证软件的安装</h4><p>在“开始”菜单中，输入 <strong>cmd</strong> 后打开 ，输入以下命令行，验证软件是否安装成功，同时还可以检测安装的软件版本。如果结果显示与下图一致，则说明安装成功；否则安装失败，卸载后重新进行安装。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git --version</div><div class="line">node -v</div><div class="line">npm -v</div></pre></td></tr></table></figure></p>
<p><img src="/img/2017-08-03_001.png" alt="验证安装"></p>
<h3 id="配置Github"><a href="#配置Github" class="headerlink" title="配置Github"></a>配置Github</h3><h4 id="创建Github仓库"><a href="#创建Github仓库" class="headerlink" title="创建Github仓库"></a>创建Github仓库</h4><p>新建一个与你的用户名相对应的仓库：<strong>yourusername.github.io</strong> ，比如你的用户名是“helloworld”，则新建一个 <strong>helloworld.github.io</strong> 的仓库。（注意：必须是用户名，其他名称无效）<br>以后个人博客的访问地址就是 <strong><a href="http://helloworld.github.io" target="_blank" rel="external">http://helloworld.github.io</a></strong></p>
<h4 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h4><p>本次博客搭建，为了方便，并没有绑定域名，就用默认的 <strong>yourusername.github.io</strong> 来进行访问。如果想要个性化的使用自己的域名，请自行百度，参考他人博客。</p>
<h4 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h4><p>如果你之前已经配置过SSH key，请自动跳过这一步。<br>当然你也可以不配置SSH key，但这样的话，每次博客内容有改动需要提交的时候就需要输入Github账号和密码，不安全。因此，我们对SSH key进行配置，在保证安全性的条件下，解决本地和服务器的链接问题。<br>打开 <strong>git bash</strong>，输入以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cd ~/. ssh</div></pre></td></tr></table></figure></p>
<p>以上命令用于检查本机已存在的ssh密钥，如果提示 <strong>No such file or directory</strong>，则说明你是第一次使用git。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;邮箱地址&quot;</div></pre></td></tr></table></figure></p>
<p>连续敲三次回车，然后会在用户目录的.ssh文件中生成id_rsa(密钥): ../.ssh/id_rsa，打开并复制里面的内容。进入你的Github的设置页面，点击左侧选项栏中的 <strong>SSH and GPG keys</strong>，再点击 <strong>new SSH key</strong>，把刚才复制的内容粘贴到 <strong>Key</strong> 那一栏， <strong>Title</strong> 栏不需要填写，直接点击 <strong>Add SSH key</strong> 即可。<br><img src="/img/2017-08-03_002.png" alt="在Github中添加SSH key"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure></p>
<p>测试是否在Github上成功添加SSH key，如果出现以下提示，在表示添加成功。<br><img src="/img/2017-08-03_003.png" alt="测试是否成功"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;【写在前面】&quot;&gt;&lt;a href=&quot;#【写在前面】&quot; class=&quot;headerlink&quot; title=&quot;【写在前面】&quot;&gt;&lt;/a&gt;【写在前面】&lt;/h3&gt;&lt;p&gt;写这一系列文章的目的有两个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为了记录Hexo+Github搭建博客的全过程，巩固
    
    </summary>
    
      <category term="博客搭建" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
      <category term="Node.js" scheme="http://yoursite.com/tags/Node-js/"/>
    
      <category term="npm" scheme="http://yoursite.com/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>word转pdf时存在的一些问题</title>
    <link href="http://yoursite.com/2017/07/19/word%E8%BD%ACpdf%E6%97%B6%E5%AD%98%E5%9C%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/07/19/word转pdf时存在的一些问题/</id>
    <published>2017-07-19T08:44:49.000Z</published>
    <updated>2017-07-19T09:17:07.140Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h4><h5 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h5><p>MATLAB图片中的网格线会变成实线（其实也只是看起来是实线，本质上还是虚线，把图片放大就会有所发现）</p>
<h5 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h5><p>首先默认电脑上安装了Adobe Acrobat XI Pro  <img src="/img/2017-07-19_401.png" alt="Adobe Acrobat XI Pro"><br>1.在word中打开要转成pdf的文档，点击  <strong>文件</strong>  ————  <strong>打印</strong> ，然后选择打印机名称: Adobe PDF（这是个虚拟打印机）<br><img src="/img/2017-07-19_402.png" alt=""><br>2.选择后，点击右边的  <strong>属性</strong>  按钮，进入Adobe PDF文档属性设置页面，将默认设置修改为高质量打印<br><img src="/img/2017-07-19_403.png" alt=""><br>3.然后点击右侧的  <strong>编辑</strong>  按钮，在左边侧栏中点击  <strong>图像</strong>  ，进行设置：在彩色图像区域，将缩减像素采样关闭，图像质量选择“最高”，右侧的像素根据需要设置。完成以上步骤后，点击最下方的  <strong>确认</strong>  按钮，这个时候会弹出一个框让你保存刚刚设置的打印方案，记住这个文件名，点击  <strong>保存</strong>  即可。<br><img src="/img/2017-07-19_404.png" alt=""><br><img src="/img/2017-07-19_405.png" alt=""><br>4.回到Adobe PDF文档属性设置页面，选择默认设置为刚才保存的文件明后，点击右下角的  <strong>确认</strong>  即可<br><img src="/img/2017-07-19_406.png" alt=""><br>5.最后，回到打印页面，点击  <strong>确认</strong> 按钮，就可以生成PDF文档，并根据需要保存文件夹</p>
<h4 id="问题二"><a href="#问题二" class="headerlink" title="问题二"></a>问题二</h4><h5 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h5><p>在EDAs上传PDF文档，经常会出现格式有问题，上传不成功的现象，这个主要是PDF文档字体嵌入的问题。</p>
<h5 id="解决办法-1"><a href="#解决办法-1" class="headerlink" title="解决办法"></a>解决办法</h5><p>1.打开生成的PDF文档，点击  <strong>文件</strong>  ————  <strong>文档属性</strong>  ————  <strong>字体</strong>：右边显示的字体中，有的字体后面括号内写了  <strong>（嵌入字符集）</strong>，有的没有，这就是上传不成功的原因。<br><img src="/img/2017-07-19_407.png" alt=""><br>2.重新回到Adobe PDF文档属性设置页面，点击  <strong>字体</strong>， 把右侧  <strong>从不嵌入</strong>  框中的全部删除，点击  <strong>另存为</strong>  按钮，按问题一种所说的步骤继续完成即可。<br><img src="/img/2017-07-19_408.png" alt=""><br>这样设置后，转成的PDF文档中的字体就全部都是（嵌入字符集），不会出现上传不成功的问题了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题一&quot;&gt;&lt;a href=&quot;#问题一&quot; class=&quot;headerlink&quot; title=&quot;问题一&quot;&gt;&lt;/a&gt;问题一&lt;/h4&gt;&lt;h5 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描
    
    </summary>
    
      <category term="office" scheme="http://yoursite.com/categories/office/"/>
    
    
      <category term="word" scheme="http://yoursite.com/tags/word/"/>
    
      <category term="pdf" scheme="http://yoursite.com/tags/pdf/"/>
    
  </entry>
  
  <entry>
    <title>单选框和复选框</title>
    <link href="http://yoursite.com/2017/07/19/%E5%8D%95%E9%80%89%E6%A1%86%E5%92%8C%E5%A4%8D%E9%80%89%E6%A1%86/"/>
    <id>http://yoursite.com/2017/07/19/单选框和复选框/</id>
    <published>2017-07-19T08:24:25.000Z</published>
    <updated>2017-07-19T08:41:07.854Z</updated>
    
    <content type="html"><![CDATA[<h4 id="单选框以及复选框的使用"><a href="#单选框以及复选框的使用" class="headerlink" title="单选框以及复选框的使用"></a>单选框以及复选框的使用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE HTML&gt;  </div><div class="line">&lt;html&gt;  </div><div class="line">&lt;head&gt;  </div><div class="line">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;  </div><div class="line">    &lt;title&gt;单选框以及复选框的使用&lt;/title&gt;  </div><div class="line">&lt;/head&gt;  </div><div class="line"></div><div class="line">&lt;body&gt;  </div><div class="line">    &lt;form&gt;  </div><div class="line">        &lt;!--单选框--&gt;  </div><div class="line">        &lt;label&gt;性别：&lt;/label&gt;  </div><div class="line">        &lt;label&gt;男&lt;/label&gt;  </div><div class="line">        &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;man&quot; /&gt;  </div><div class="line">        &lt;label&gt;女&lt;/label&gt;  </div><div class="line">        &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;woman&quot; checked=&quot;checked&quot;/&gt;    &lt;!--默认选中--&gt;  </div><div class="line">        &lt;br/&gt;&lt;br/&gt;  </div><div class="line"></div><div class="line">        &lt;!--复选框--&gt;  </div><div class="line">        &lt;label&gt;爱好：&lt;/label&gt;  </div><div class="line">        &lt;label&gt;篮球&lt;/label&gt;  </div><div class="line">        &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;1&quot; /&gt;  </div><div class="line">        &lt;label&gt;足球&lt;/label&gt;  </div><div class="line">        &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;2&quot; /&gt;  </div><div class="line">        &lt;label&gt;跑步&lt;/label&gt;  </div><div class="line">        &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;3&quot; checked=&quot;checked&quot; /&gt;     &lt;!--默认选中--&gt;  </div><div class="line">        &lt;label&gt;跳舞&lt;/label&gt;  </div><div class="line">        &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;4&quot; /&gt;  </div><div class="line">    &lt;/form&gt;  </div><div class="line">&lt;/body&gt;  </div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h5 id="type属性"><a href="#type属性" class="headerlink" title="type属性"></a>type属性</h5><ul>
<li>radio：表示单选框</li>
<li>checkbox：表示多选框</li>
</ul>
<h5 id="value属性"><a href="#value属性" class="headerlink" title="value属性"></a>value属性</h5><p>提交数据到服务器的值（供后端程序使用）</p>
<h5 id="name属性"><a href="#name属性" class="headerlink" title="name属性"></a>name属性</h5><p>为控件命名，以备后台程序ASP、PHP使用</p>
<h5 id="checked属性"><a href="#checked属性" class="headerlink" title="checked属性"></a>checked属性</h5><p>当设置checked=”checked”时，该选项被默认选中</p>
<p>结果显示如下图：<br><img src="/img/2017-07-19_301.png" alt="结果显示图"><br>以上代码只有在点击选项后面的圆圈或者小方块的时候才能选中该选项，那么如何实现点击文字就选中选项呢？</p>
<h4 id="点击文字选中选项"><a href="#点击文字选中选项" class="headerlink" title="点击文字选中选项"></a>点击文字选中选项</h4><p>一般有两种实现方法，具体代码分别如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE HTML&gt;  </div><div class="line">&lt;html&gt;  </div><div class="line">&lt;head&gt;  </div><div class="line">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;  </div><div class="line">    &lt;title&gt;如何实现点击文字选中选项&lt;/title&gt;  </div><div class="line">&lt;/head&gt;  </div><div class="line"></div><div class="line">&lt;body&gt;  </div><div class="line">    &lt;form&gt;  </div><div class="line">        &lt;!--第一种方法：把文字和input包含在lable标签中--&gt;  </div><div class="line">        &lt;!--单选框--&gt;  </div><div class="line">        &lt;label&gt;性别：&lt;/label&gt;  </div><div class="line">        &lt;label&gt;男&lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;man&quot; /&gt;&lt;/label&gt;  </div><div class="line">        &lt;label&gt;女&lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;woman&quot; checked=&quot;checked&quot;/&gt;&lt;/label&gt;      &lt;!--默认选中--&gt;  </div><div class="line">        &lt;br/&gt;&lt;br/&gt;  </div><div class="line">        &lt;!--复选框--&gt;  </div><div class="line">        &lt;label&gt;爱好：&lt;/label&gt;  </div><div class="line">        &lt;label&gt;篮球&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;1&quot; /&gt;&lt;/label&gt;  </div><div class="line">        &lt;label&gt;足球&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;2&quot; /&gt;&lt;/label&gt;  </div><div class="line">        &lt;label&gt;跑步&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;3&quot; checked=&quot;checked&quot; /&gt; &lt;/label&gt;     &lt;!--默认选中--&gt;  </div><div class="line">        &lt;label&gt;跳舞&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;4&quot; /&gt;&lt;/label&gt;  </div><div class="line"></div><div class="line">        &lt;!--第二种方法：文字在label标签内,input中的id和&lt;label&gt;标签内的for=&quot;&quot;中的名字必须相同--&gt;  </div><div class="line">        &lt;!--单选框--&gt;  </div><div class="line">        &lt;label&gt;性别：&lt;/label&gt;  </div><div class="line">        &lt;label for=&quot;radio1&quot;&gt;男&lt;/label&gt;  </div><div class="line">        &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;man&quot; id=&quot;radio1&quot; /&gt;  </div><div class="line">        &lt;label for=&quot;radio2&quot;&gt;女&lt;/label&gt;  </div><div class="line">        &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;woman&quot; id=&quot;radio2&quot; checked=&quot;checked&quot;/&gt;    &lt;!--默认选中--&gt;  </div><div class="line">        &lt;br/&gt;&lt;br/&gt;  </div><div class="line">        &lt;!--复选框--&gt;  </div><div class="line">        &lt;label&gt;爱好：&lt;/label&gt;  </div><div class="line">        &lt;label for=&quot;check1&quot;&gt;篮球&lt;/label&gt;  </div><div class="line">        &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;1&quot; id=&quot;check1&quot; /&gt;  </div><div class="line">        &lt;label for=&quot;check2&quot;&gt;足球&lt;/label&gt;  </div><div class="line">        &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;2&quot; id=&quot;check2&quot; /&gt;  </div><div class="line">        &lt;label for=&quot;check3&quot;&gt;跑步&lt;/label&gt;  </div><div class="line">        &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;3&quot; id=&quot;check3&quot; checked=&quot;checked&quot; /&gt;     &lt;!--默认选中--&gt;  </div><div class="line">        &lt;label for=&quot;check4&quot;&gt;跳舞&lt;/label&gt;  </div><div class="line">        &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;4&quot; id=&quot;check4&quot; /&gt;  </div><div class="line">    &lt;/form&gt;  </div><div class="line">&lt;/body&gt;  </div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;单选框以及复选框的使用&quot;&gt;&lt;a href=&quot;#单选框以及复选框的使用&quot; class=&quot;headerlink&quot; title=&quot;单选框以及复选框的使用&quot;&gt;&lt;/a&gt;单选框以及复选框的使用&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tabl
    
    </summary>
    
      <category term="HTML" scheme="http://yoursite.com/categories/HTML/"/>
    
    
      <category term="表单" scheme="http://yoursite.com/tags/%E8%A1%A8%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>WampServer的安装和配置</title>
    <link href="http://yoursite.com/2017/07/19/Wampserver%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2017/07/19/Wampserver的安装和配置/</id>
    <published>2017-07-19T07:43:24.000Z</published>
    <updated>2017-07-19T08:18:42.846Z</updated>
    
    <content type="html"><![CDATA[<h4 id="WampServer介绍"><a href="#WampServer介绍" class="headerlink" title="WampServer介绍"></a>WampServer介绍</h4><p>首先解读一下Wamp这四个字母分别代表什么：</p>
<ul>
<li>w: Windows</li>
<li>a: Apache</li>
<li>m: Mysql</li>
<li>p: PHP<br>Wamp就是WindowsApacheMyqlPHP集成安装环境，即在windows下的apache、php和mysql的服务器软件；而WampServer呢就是Apache Web服务器、PHP解释器以及MySQL数据库的整合软件包。这样一来，开发人员就不必花大量时间在繁琐的环境配置中，可腾出更多精力去做开发。<h5 id="WampServer的特点"><a href="#WampServer的特点" class="headerlink" title="WampServer的特点"></a>WampServer的特点</h5>1.支持中文，一键安装，省时省力，任何人都可以轻松搭建；<br>2.集成Apache/MySQL/PHP/PhpMyadmin；支持PHP扩展，Apache的mod_rewrite；<br>3.一键启动、重启、停止所有服务，一键切换到离线状态等等。</li>
</ul>
<h4 id="WampServer的安装和配置"><a href="#WampServer的安装和配置" class="headerlink" title="WampServer的安装和配置"></a>WampServer的安装和配置</h4><p>本文中记录了我在安装使用WampServer过程中遇到的一些问题，在网上查阅了很多资料，在这里稍作整理。（主要针对Window7）</p>
<h5 id="WampServer的安装"><a href="#WampServer的安装" class="headerlink" title="WampServer的安装"></a>WampServer的安装</h5><p>自行百度进行安装，根据自己的电脑选择合适的版本（x86/x64）；安装过程很简单，基本就是直接点击下一步去就可以，有两点需要注意一下：<br>1.选择默认浏览工具，默认为explorer.exe，直接点击打开杰克，如下图所示：<br><img src="/img/2017-07-19_201.jpg" alt="默认浏览工具"><br>2.输入管理员邮箱以及邮箱SMTP的服务器（这个窗口有的版本会出现，有的不会出现），如果你愿意填写就写一下，一般直接点击next也不会影响安装。</p>
<h5 id="安装结束，打开WampServer"><a href="#安装结束，打开WampServer" class="headerlink" title="安装结束，打开WampServer"></a>安装结束，打开WampServer</h5><p>1.打开WampServer时需要注意的是，尽量把电脑上的浏览器和一些媒体播放器先关闭，以免占用 <strong>80端口</strong>；<br>2.在保证80端口没有被占用的情况下打开WampServer，可能会出现提示窗口： <strong>提示MSVCR110.dll丢失</strong>；<br>解决办法：首先卸载已经安装好的WampServer，对于 <strong>32位</strong> 的系统，安装 <strong>vcredist_x86.exe</strong> 之后，重新安装Wampserver；而对于 <strong>64位</strong> 的系统，则安装 <strong>vcredist_x64.exe</strong>，再重新安装Wampserver即可。<br><strong>vcredist_x86.exe</strong> 和 <strong>vcredist_x64.exe</strong> 的下载地址：<a href="http://www.microsoft.com/zh-cn/download/details.aspx?id=30679" target="_blank" rel="external">http://www.microsoft.com/zh-cn/download/details.aspx?id=30679</a></p>
<h5 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h5><p>安装完并成功启动后，突变显示为绿色，右击突变，然后依次选择 <strong>Language</strong> —— <strong>chinese</strong> 进行语言设置；</p>
<h5 id="访问WampServer页面"><a href="#访问WampServer页面" class="headerlink" title="访问WampServer页面"></a>访问WampServer页面</h5><p>鼠标左键点击绿色图标，再点击 <strong>localhost</strong> 即可访问该页面，默认为 <strong>Server Configuration</strong><br><img src="/img/2017-07-19_202.jpg" alt=""><br><img src="/img/2017-07-19_203.jpg" alt="Server Configuration页面"></p>
<h5 id="进入phpmyadmin管理页面"><a href="#进入phpmyadmin管理页面" class="headerlink" title="进入phpmyadmin管理页面"></a>进入phpmyadmin管理页面</h5><p>点击Tools下的phpmyadmin，即可进入phpmyadmin管理页面，首先会出现一个登陆页面，一般用户名为root，密码为空，点击右下角的执行即可进入。<br><img src="/img/2017-07-19_204.jpg" alt="进入phpmyadmin管理页面"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;WampServer介绍&quot;&gt;&lt;a href=&quot;#WampServer介绍&quot; class=&quot;headerlink&quot; title=&quot;WampServer介绍&quot;&gt;&lt;/a&gt;WampServer介绍&lt;/h4&gt;&lt;p&gt;首先解读一下Wamp这四个字母分别代表什么：&lt;/p&gt;
&lt;ul
    
    </summary>
    
      <category term="前端工具" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="集成环境" scheme="http://yoursite.com/tags/%E9%9B%86%E6%88%90%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>关于MATLAB画图</title>
    <link href="http://yoursite.com/2017/07/19/%E5%85%B3%E4%BA%8EMATLAB%E7%94%BB%E5%9B%BE/"/>
    <id>http://yoursite.com/2017/07/19/关于MATLAB画图/</id>
    <published>2017-07-19T07:16:22.000Z</published>
    <updated>2017-07-19T07:30:36.166Z</updated>
    
    <content type="html"><![CDATA[<h4 id="设置基本线型和颜色"><a href="#设置基本线型和颜色" class="headerlink" title="设置基本线型和颜色"></a>设置基本线型和颜色</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">x=0:0.1:2;</div><div class="line">y=2*x.^2-x;</div><div class="line">plot(x,y);</div></pre></td></tr></table></figure>
<p>以上MATLAB代码画的是曲线: y=2x^2-x<br><img src="/img/2017-07-19_101.jpg" alt="曲线图"></p>
<h5 id="设置线型"><a href="#设置线型" class="headerlink" title="设置线型"></a>设置线型</h5><ul>
<li>plot(x,y,’–’);                 // 画虚线</li>
<li>plot(x,y,’.’);                  // 画点</li>
<li>plot(x,y,’:’);                  // 画点线</li>
<li>plot(x,y,’o’);                  // 画圆圈</li>
<li>plot(x,y,’+’);                  // 画加号</li>
<li>plot(x,y,’x’);                  // 画叉</li>
<li>plot(x,y,’p’);                  // 画星号（空心五角星）</li>
<li>plot(x,y,’d’);                  // 画菱形</li>
<li>plot(x,y,’s’);                  // 画方块</li>
<li>plot(x,y,’*‘);                 // 画星号（*）</li>
<li>plot(x,y,’-‘);                  // 画实线</li>
<li>plot(x,y,’-.’);                 // 画点划线</li>
<li>……<br>以上列举了常用的一些线型，这些线型中部分还可以组合使用，就像最后一个点划线一样。</li>
</ul>
<h5 id="设置颜色（八种基本颜色）"><a href="#设置颜色（八种基本颜色）" class="headerlink" title="设置颜色（八种基本颜色）"></a>设置颜色（八种基本颜色）</h5><ul>
<li>plot(x,y,’r’);                   // 红色</li>
<li>plot(x,y,’b’);                   // 蓝色</li>
<li>plot(x,y,’g’);                   // 绿色</li>
<li>plot(x,y,’y’);                   // 黄色</li>
<li>plot(x,y,’m’);                   // 紫红色</li>
<li>plot(x,y,’c’);                   // 蓝绿色</li>
<li>plot(x,y,’w’);                   // 白色</li>
<li>plot(x,y,’k’);                   // 黑色</li>
</ul>
<h5 id="设置线条粗细"><a href="#设置线条粗细" class="headerlink" title="设置线条粗细"></a>设置线条粗细</h5><ul>
<li>plot(x,y,’linewidth’,3);</li>
</ul>
<p>类似的，还有标记点的边缘颜色（MarkerEdgeColor）、填充颜色（MarkerFaceColor）以及标记点的大小（MarkerSize）。</p>
<h4 id="画平滑曲线"><a href="#画平滑曲线" class="headerlink" title="画平滑曲线"></a>画平滑曲线</h4><p>1.通过拟合来画平滑曲线<br>2.通过插值来画平滑曲线<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">clear all;clc;  </div><div class="line">a=1:1:10;                                  % 横坐标   b=[2 4 8 10 16 20 30 36 50 80];            % 纵坐标   plot(a,b,&apos;b&apos;);                             % 直接画图  </div><div class="line">hold on; grid on;     </div><div class="line"></div><div class="line">%%%% 第一种，画平滑曲线的画法  </div><div class="line">c=polyfit(a,b,2);                           % 进行拟合，c为2次拟合后的系数  </div><div class="line">d=polyval(c,a,1);                           % 拟合后，每一个横坐标对应的值即为d   </div><div class="line">plot(a, d, &apos;r&apos;);                            % 拟合后的曲线   plot(a, b, &apos;*&apos;);                            % 将每个点 用*画出来     </div><div class="line"></div><div class="line">%%%% 第二种，画平滑曲线的方法   values = spcrv([[a(1) a a(end)];[b(1) b b(end)]],3);   plot(values(1,:),values(2,:), &apos;g&apos;);</div></pre></td></tr></table></figure></p>
<p><img src="/img/2017-07-19_102.jpg" alt="平滑曲线图"></p>
<h4 id="根据大量离散点画出包络曲线（比如在画功率谱的时候）"><a href="#根据大量离散点画出包络曲线（比如在画功率谱的时候）" class="headerlink" title="根据大量离散点画出包络曲线（比如在画功率谱的时候）"></a>根据大量离散点画出包络曲线（比如在画功率谱的时候）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">// reshape函数即将矩阵PSD重新调整为d行N/D列的新矩阵  </div><div class="line">y=reshape(PSD,d,N/d);          // PSD表示纵坐标，N表示采的点数，d表示每段的距离  </div><div class="line">y=max(y);  </div><div class="line">x=linspace(0,max(f),N/d);      // f表示横坐标  </div><div class="line">// linspace()函数用于产生0，max(f)之间N/d个元素组成的一维数组</div></pre></td></tr></table></figure>
<p><img src="/img/2017-07-19_103.jpg" alt="平滑曲线图"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;设置基本线型和颜色&quot;&gt;&lt;a href=&quot;#设置基本线型和颜色&quot; class=&quot;headerlink&quot; title=&quot;设置基本线型和颜色&quot;&gt;&lt;/a&gt;设置基本线型和颜色&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
    
    </summary>
    
      <category term="MATLAB" scheme="http://yoursite.com/categories/MATLAB/"/>
    
    
      <category term="画图" scheme="http://yoursite.com/tags/%E7%94%BB%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>三次握手和四次挥手</title>
    <link href="http://yoursite.com/2017/07/19/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/"/>
    <id>http://yoursite.com/2017/07/19/三次握手和四次挥手/</id>
    <published>2017-07-19T06:48:31.000Z</published>
    <updated>2017-07-19T07:13:22.641Z</updated>
    
    <content type="html"><![CDATA[<p>之前在<a href="https://maizi93.github.io/2017/07/19/从地址栏输入URL到页面加载完成，发生了什么？/" target="_blank" rel="external">从地址栏输入URL到页面加载完成，发生了什么？</a>一文中提到了 <strong>三次握手</strong> 和 <strong>四次挥手</strong> ，本文将具体展开。</p>
<h4 id="TCP连接"><a href="#TCP连接" class="headerlink" title="TCP连接"></a>TCP连接</h4><ul>
<li>三次握手</li>
<li>四次挥手</li>
</ul>
<h5 id="图形解析"><a href="#图形解析" class="headerlink" title="图形解析"></a>图形解析</h5><p>话不多说，直接上图<br><img src="/img/2017-07-19_001.jpg" alt="三次握手和四次挥手"></p>
<h5 id="符号解释"><a href="#符号解释" class="headerlink" title="符号解释"></a>符号解释</h5><ul>
<li>SYN：表示发起一个新的连接；（标志位）</li>
<li>Seq序号：用来标识从TCP源端向目的端发送的字节流，发送方发送数据时对此进行过标记；</li>
<li>ACK：确认序号有效，ACK = Seq + 1；（标志位）</li>
<li>FIN：表示释放一个连接；（标志位）</li>
</ul>
<h4 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h4><ul>
<li>第一次握手<br>客户端（Client）发送SYN = 1， 随机产生Seq = X，将数据包发送给服务器（Server），并进入SYN_SEND状态，等待服务器确认；</li>
<li>第二次握手<br>服务器接收到数据包后，由SYN = 1知道客户端请求建立连接，服务器将SYN和ACK都置为1，ack = X + 1，随机产生Seq = Y，将数据包放给客户端以确认连接请求，服务器进入SYN_RCVD状态；</li>
<li>第三次握手<br>客户端收到确认后，检查ACK = 1？ack = X + 1？如果是，则将ACK置为1，ack = Y + 1, Seq = X + 1，并将数据包发送给服务器。服务器接收到数据包后，确认ACK = 1？ack = Y + 1？如果是，则连接建立成功，客户端和服务器端都进入ESTABLISHED状态，也即完成了三次握手。</li>
</ul>
<h4 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h4><p>（由于TCP连接是全双工的，需要对每个方向单独进行关闭，也即需要客户端和服务器端分别发送FIN来关闭连接。首先进行关闭的一方将执行主动关闭，另一方将执行被动关闭。客户端和服务器端都可以是主动关闭的那一方）。</p>
<ul>
<li>第一次挥手<br>客户端发送FIN = 1（为了简便，图中其余标志位和符号在这里省略，和三次握手的原理是一样的），用来关闭客户端到服务器端的数据传达，客户端进入FIN-WAIT-1状态；</li>
<li>第二次挥手<br>服务器接收到数据包后，由FIN = 1知道客户端请求断开连接，将ACK置为1，ack = X + 1，服务器端进入CLOSE-WAIT状态（注意：这里服务器但还是可以正常发送数据，只是客户端不再发送数据）；客户端收到确认后，检查ACK和ack，如果正确，则进入FIN-WAIT-2状态；</li>
<li>第三次挥手<br>服务器端发送FIN = 1，用来关闭服务器端到客户端的数据传送，进入LAST-ACK状态；</li>
<li>第四次挥手<br>客户端接收到数据包后，进入TIME-WAIT状态，然后发送数据包（ACK = 1，ack = Z + 1）给服务器，服务器进入CLOSED状态，即完成四次挥手。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前在&lt;a href=&quot;https://maizi93.github.io/2017/07/19/从地址栏输入URL到页面加载完成，发生了什么？/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;从地址栏输入URL到页面加载完成，发生了什么？&lt;/a&gt;一文中提
    
    </summary>
    
      <category term="网络" scheme="http://yoursite.com/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="TCP连接" scheme="http://yoursite.com/tags/TCP%E8%BF%9E%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>从地址栏输入URL到页面加载完成，发生了什么？</title>
    <link href="http://yoursite.com/2017/07/19/%E4%BB%8E%E5%9C%B0%E5%9D%80%E6%A0%8F%E8%BE%93%E5%85%A5URL%E5%88%B0%E9%A1%B5%E9%9D%A2%E5%8A%A0%E8%BD%BD%E5%AE%8C%E6%88%90%EF%BC%8C%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
    <id>http://yoursite.com/2017/07/19/从地址栏输入URL到页面加载完成，发生了什么？/</id>
    <published>2017-07-19T06:37:09.000Z</published>
    <updated>2017-07-19T06:45:13.161Z</updated>
    
    <content type="html"><![CDATA[<h4 id="从地址栏输入URL到页面加载完成，发生了什么？"><a href="#从地址栏输入URL到页面加载完成，发生了什么？" class="headerlink" title="从地址栏输入URL到页面加载完成，发生了什么？"></a>从地址栏输入URL到页面加载完成，发生了什么？</h4><p>参考别人的文章后，自己总结的，有写的不妥的，还请大家指正。</p>
<p>整个过程大致分为以下几个步骤：<br>1.浏览器查看缓存，如果缓存中有，则直接在屏幕中显示内容；若没有，则执行以下步骤；<br>2.进行域名（DNS）解析，获取相应的IP地址；（域名解析的过程，实际上就是将域名还原为IP地址的过程）<br>3.浏览器向服务器发起TCP链接，与浏览器建立TCP三次握手；<br>4.握手成功后，浏览器发送HTTP请求；（HTTP请求主要包括：请求行、请求头、请求正文）<br>5.服务器接收并处理请求，并返回HTTP响应；<br>6.浏览器收到HTTP响应后，开始构建页面，解析html源码，对页面进行渲染；<br>7.生成DOM树，解析CSS样式、js交互；<br>8.（可选）浏览器发送静态资源请求；<br>9.（可选）浏览器发送Ajax请求；<br>10.页面构建完成，关闭连接。（TCP四次挥手）</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;从地址栏输入URL到页面加载完成，发生了什么？&quot;&gt;&lt;a href=&quot;#从地址栏输入URL到页面加载完成，发生了什么？&quot; class=&quot;headerlink&quot; title=&quot;从地址栏输入URL到页面加载完成，发生了什么？&quot;&gt;&lt;/a&gt;从地址栏输入URL到页面加载完成，
    
    </summary>
    
      <category term="网络" scheme="http://yoursite.com/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="页面加载" scheme="http://yoursite.com/tags/%E9%A1%B5%E9%9D%A2%E5%8A%A0%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>表格排序-JavaScript</title>
    <link href="http://yoursite.com/2017/07/19/%E8%A1%A8%E6%A0%BC%E6%8E%92%E5%BA%8F-JavaScript/"/>
    <id>http://yoursite.com/2017/07/19/表格排序-JavaScript/</id>
    <published>2017-07-19T03:50:45.000Z</published>
    <updated>2017-07-19T10:02:08.107Z</updated>
    
    <content type="html"><![CDATA[<p>笔试做到一个表格排序的题，当时没有完全实现，本文记录了用JavavScript进行表格排序的实现过程。</p>
<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>在页面上有如下表格，当点击成绩的时候，所有行数据根据成绩从低到高排序，再点击时成绩则变为从高到低排序。</p>
<table>
<thead>
<tr>
<th style="text-align:left">姓名</th>
<th style="text-align:left">性别</th>
<th style="text-align:left">成绩</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">张三</td>
<td style="text-align:left">男</td>
<td style="text-align:left">77</td>
</tr>
<tr>
<td style="text-align:left">李四</td>
<td style="text-align:left">女</td>
<td style="text-align:left">87</td>
</tr>
<tr>
<td style="text-align:left">王五</td>
<td style="text-align:left">未知</td>
<td style="text-align:left">50</td>
</tr>
</tbody>
</table>
<p>第一次点击成绩之后：</p>
<table>
<thead>
<tr>
<th style="text-align:left">姓名</th>
<th style="text-align:left">性别</th>
<th style="text-align:left">成绩</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">王五</td>
<td style="text-align:left">未知</td>
<td style="text-align:left">50</td>
</tr>
<tr>
<td style="text-align:left">张三</td>
<td style="text-align:left">男</td>
<td style="text-align:left">77</td>
</tr>
<tr>
<td style="text-align:left">李四</td>
<td style="text-align:left">女</td>
<td style="text-align:left">87</td>
</tr>
</tbody>
</table>
<p>再次点击成绩之后：</p>
<table>
<thead>
<tr>
<th style="text-align:left">姓名</th>
<th style="text-align:left">性别</th>
<th style="text-align:left">成绩</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">李四</td>
<td style="text-align:left">女</td>
<td style="text-align:left">87</td>
</tr>
<tr>
<td style="text-align:left">张三</td>
<td style="text-align:left">男</td>
<td style="text-align:left">77</td>
</tr>
<tr>
<td style="text-align:left">王五</td>
<td style="text-align:left">未知</td>
<td style="text-align:left">50</td>
</tr>
</tbody>
</table>
<h4 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h4><h5 id="html代码部分"><a href="#html代码部分" class="headerlink" title="html代码部分"></a>html代码部分</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">&lt;table&gt;</div><div class="line">    &lt;thead&gt;</div><div class="line">        &lt;tr&gt;  </div><div class="line">            &lt;td&gt;姓名&lt;/td&gt;  </div><div class="line">            &lt;td&gt;性别&lt;/td&gt;  </div><div class="line">            &lt;td&gt;成绩&lt;/td&gt;  </div><div class="line">        &lt;/tr&gt;  </div><div class="line">    &lt;/thead&gt;</div><div class="line">    &lt;tbody&gt;</div><div class="line">        &lt;tr&gt;  </div><div class="line">            &lt;td&gt;张三&lt;/td&gt;  </div><div class="line">            &lt;td&gt;男&lt;/td&gt;  </div><div class="line">            &lt;td&gt;77&lt;/td&gt;  </div><div class="line">        &lt;/tr&gt;  </div><div class="line">        &lt;tr&gt;  </div><div class="line">            &lt;td&gt;李四&lt;/td&gt;  </div><div class="line">            &lt;td&gt;女&lt;/td&gt;  </div><div class="line">            &lt;td&gt;87&lt;/td&gt;  </div><div class="line">        &lt;/tr&gt;  </div><div class="line">        &lt;tr&gt;  </div><div class="line">            &lt;td&gt;王五&lt;/td&gt;  </div><div class="line">            &lt;td&gt;未知&lt;/td&gt;  </div><div class="line">            &lt;td&gt;50&lt;/td&gt;  </div><div class="line">        &lt;/tr&gt;  </div><div class="line">    &lt;/tbody&gt;</div><div class="line">&lt;/table&gt;</div></pre></td></tr></table></figure>
<h5 id="CSS代码部分"><a href="#CSS代码部分" class="headerlink" title="CSS代码部分"></a>CSS代码部分</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">*&#123;</div><div class="line">    padding: 0;</div><div class="line">    margin: 0;</div><div class="line">&#125;</div><div class="line">table&#123;</div><div class="line">    border: solid 1px;</div><div class="line">    margin: 60px auto;</div><div class="line">    width: 600px;</div><div class="line">    border-collapse: collapse;    /*为表格设置合并边框模型*/</div><div class="line">    cursor: default;    </div><div class="line">    /*该属性定义了鼠标指针放在一个元素边界范围内时所用的光标形状，default默认光标(通常是一个箭头)*/</div><div class="line">&#125;</div><div class="line">tr&#123;</div><div class="line">    border: solid 1px;</div><div class="line">    height: 26px;</div><div class="line">&#125;</div><div class="line">thead&#123;</div><div class="line">  border: solid 1px;</div><div class="line">  cursor: pointer;</div><div class="line">  /*光标呈现为指示链接的指针(一只手)*/</div><div class="line">&#125;</div><div class="line">td&#123;</div><div class="line">  border: solid 1px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="JavaScript代码部分"><a href="#JavaScript代码部分" class="headerlink" title="JavaScript代码部分"></a>JavaScript代码部分</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">&lt;script type = &quot;text/javascript&quot;&gt;</div><div class="line">    window.onload = function()&#123;</div><div class="line">        var tHead = document.getElementsByTagName(&apos;thead&apos;)[0];</div><div class="line">        var tBody = document.getElementsByTagName(&apos;tbody&apos;)[0];</div><div class="line">        var tHeadTd = tHead.getElementsByTagName(&apos;td&apos;);</div><div class="line">        var rlen = tBody.rows.length;    // 获取tbody中的行数</div><div class="line">        var clen = tBody.rows[0].cells.length;   // 获取tbody中的每行的列数</div><div class="line"></div><div class="line">        var arr = [];</div><div class="line">        for(var  i = 0; i &lt; rlen; i ++)&#123;</div><div class="line">          arr[i] = tBody.rows[i];    // 把tBody中的内容以行的形式放到数组arr中</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        var count= 0;    // 记录点击的次数（第一次点击，升序排列；再次点击，降序排列）</div><div class="line">        // 当点击“成绩”单元格时</div><div class="line">        tHeadTd[2].onclick = function()&#123;</div><div class="line">            if(count == 0)&#123;</div><div class="line">              sortUp(arr,2);</div><div class="line">              count = 1;</div><div class="line">            &#125;else&#123;</div><div class="line">              sortDown(arr,2);</div><div class="line">              count = 0;</div><div class="line">            &#125;</div><div class="line">            var str = &quot;&quot;;</div><div class="line">            var html = &quot;&quot;;</div><div class="line"></div><div class="line">            // 遍历数组arr的每一行</div><div class="line">            for(var j = 0; j &lt; arr.length; j ++)&#123;</div><div class="line">                // 遍历数组arr每一行的长度</div><div class="line">                for(var k = 0; k &lt; clen; k ++)&#123;</div><div class="line">                    // 获取排序后每行每个单元格的内容</div><div class="line">                    str += &quot;&lt;td&gt;&quot; + arr[j].children[k].innerText + &quot;&lt;/td&gt;&quot;;</div><div class="line">                &#125;</div><div class="line">                // 把每个单元格放到行内，并把每行&lt;tr&gt;赋给html</div><div class="line">                html = &quot;&lt;tr&gt;&quot; + str + &quot;&lt;/tr&gt;&quot;;</div><div class="line">                str = &quot;&quot;;</div><div class="line">            &#125;</div><div class="line">            tBody.innerHTML = html;     // 把html内容添加到表格tbody中</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        // 数字升序</div><div class="line">        function sortUp(arr,n)&#123;</div><div class="line">            arr.sort(function(a,b)&#123;</div><div class="line">                return a.children[n].innerText - b.children[n].innerText;  </div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        // 数字降序</div><div class="line">        function sortDown(arr,n)&#123;</div><div class="line">            arr.sort(function(a,b)&#123;</div><div class="line">                return b.children[n].innerText - a.children[n].innerText;  </div><div class="line">            &#125;)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;笔试做到一个表格排序的题，当时没有完全实现，本文记录了用JavavScript进行表格排序的实现过程。&lt;/p&gt;
&lt;h4 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h4&gt;&lt;p&gt;在页面上有如下表格，当
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="表格排序" scheme="http://yoursite.com/tags/%E8%A1%A8%E6%A0%BC%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>两个数相乘(包括整数和小数)，精度问题</title>
    <link href="http://yoursite.com/2017/07/19/%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%9B%B8%E4%B9%98-%E5%8C%85%E6%8B%AC%E6%95%B4%E6%95%B0%E5%92%8C%E5%B0%8F%E6%95%B0-%EF%BC%8C%E7%B2%BE%E5%BA%A6%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/07/19/两个数相乘-包括整数和小数-，精度问题/</id>
    <published>2017-07-19T03:15:36.000Z</published>
    <updated>2017-07-19T03:44:12.059Z</updated>
    
    <content type="html"><![CDATA[<h4 id="在有精度要求的情况下，进行两数的乘法运算"><a href="#在有精度要求的情况下，进行两数的乘法运算" class="headerlink" title="在有精度要求的情况下，进行两数的乘法运算"></a>在有精度要求的情况下，进行两数的乘法运算</h4><p>假设a和b相乘，a、b都有可能是小数，返回相乘的结果(注意精度问题)<br>举个栗子：a = 4; b = 0.0002 ———— 结果：0.0008</p>
<p>实现代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">var a = 4;</div><div class="line">var b = 0.0002;</div><div class="line">var result = multiplication(a, b);</div><div class="line">console.log(result);     // 0.0008</div><div class="line"></div><div class="line">function multiplication(num1, num2)&#123;</div><div class="line">  // 首先把两个数转换成字符串(十进制)</div><div class="line">  var str1 = num1.toString();</div><div class="line">  var str2 = num2.toString();</div><div class="line"></div><div class="line">  // 分别获取两个数的小数位数(确定精度)</div><div class="line">  var l1 = (str1.indexOf(&apos;.&apos;) == -1) ? 0 : (str1.length - str1.indexOf(&apos;.&apos;) - 1);</div><div class="line">  var l2 = (str2.indexOf(&apos;.&apos;) == -1) ? 0 : (str2.length - str2.indexOf(&apos;.&apos;) - 1);</div><div class="line">  var l = Math.max(l1, l2);</div><div class="line"></div><div class="line">  // 根据精度计算结果</div><div class="line">  var sum = parseFloat(a * b).toFixed(l);</div><div class="line">  return sum;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>以上实现过程中用到的一些方法：</p>
<h5 id="parseFloat-方法"><a href="#parseFloat-方法" class="headerlink" title="parseFloat()方法"></a>parseFloat()方法</h5><p>该方法可解析一个字符串，并返回一个浮点数；</p>
<h5 id="toFixed-方法"><a href="#toFixed-方法" class="headerlink" title="toFixed()方法"></a>toFixed()方法</h5><p>该方法可把Number四舍五入为指定小数位数的数字；</p>
<h5 id="indexOf-方法"><a href="#indexOf-方法" class="headerlink" title="indexOf()方法"></a>indexOf()方法</h5><p>该方法可返回某个指定的字符串值在字符串中首次出现的位置：这里，如果这个数不是小数，则str.indexOf(‘.’)返回-1，如果是小数，则返回小数点在字符串中第一次出现的位置；</p>
<h5 id="获取小数位数"><a href="#获取小数位数" class="headerlink" title="获取小数位数"></a>获取小数位数</h5><p>str1.length - str1.indexOf(‘.’) - 1，小数的位数 = 字符串的长度 - 小数点第一次在字符串中出现的位置 - 1；举个栗子：123.56（小数位数 = 6 - 3 - 1 = 2）；</p>
<h4 id="二进制字符串和十进制之间的转换"><a href="#二进制字符串和十进制之间的转换" class="headerlink" title="二进制字符串和十进制之间的转换"></a>二进制字符串和十进制之间的转换</h4><ul>
<li>十进制转换成二进制字符串：toString()方法</li>
<li>二进制字符串转换成十进制：parseInt()方法<br>相关代码：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var num = 8;                         // 定义一个十进制的整数</div><div class="line">var str = num.toString(2);           // 转换成二进制的字符串，2表示二进制:  &quot;1000&quot;</div><div class="line">var num1 = str.parseInt(str,2);      // 将二进制字符串转换成十进制的整数，2也表示二进制: 8</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h5><p>将给定数字转换成二进制字符串，如果字符串长度不足8位，则在前面补0到满8位。<br>相关代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">var a = 8;</div><div class="line">var result = changeTo(a);</div><div class="line">console.log(result);        // &quot;00001000&quot;</div><div class="line"></div><div class="line">function changeTo(num)&#123;</div><div class="line">  var str = num.toString(2);</div><div class="line">  var l = str.length;</div><div class="line">  var s1 = &quot;00000000&quot;;          // 用于补齐，满8位</div><div class="line">  if(l &lt; 8)&#123;</div><div class="line">    var s2 = s1.slice(0, 8-l);  // 截取需要补齐的位数</div><div class="line">    str = s2 + str;  </div><div class="line">  &#125;</div><div class="line">  return str;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;在有精度要求的情况下，进行两数的乘法运算&quot;&gt;&lt;a href=&quot;#在有精度要求的情况下，进行两数的乘法运算&quot; class=&quot;headerlink&quot; title=&quot;在有精度要求的情况下，进行两数的乘法运算&quot;&gt;&lt;/a&gt;在有精度要求的情况下，进行两数的乘法运算&lt;/h4&gt;&lt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="精度" scheme="http://yoursite.com/tags/%E7%B2%BE%E5%BA%A6/"/>
    
      <category term="转换" scheme="http://yoursite.com/tags/%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>浮动以及清楚浮动的方法</title>
    <link href="http://yoursite.com/2017/07/19/%E6%B5%AE%E5%8A%A8%E4%BB%A5%E5%8F%8A%E6%B8%85%E6%A5%9A%E6%B5%AE%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2017/07/19/浮动以及清楚浮动的方法/</id>
    <published>2017-07-19T02:31:21.000Z</published>
    <updated>2017-07-19T03:08:45.246Z</updated>
    
    <content type="html"><![CDATA[<h4 id="浮动-Float"><a href="#浮动-Float" class="headerlink" title="浮动(Float)"></a>浮动(Float)</h4><p>css中的浮动(float)，会使元素向左或向右浮动，直到它的外边缘碰到包含框或者另一个浮动框的边框为止，其周围也会重新排列。浮动元素会脱离文档流，且不能通过left、right、top、bottom来确定元素的位置，所以文档普通流中的块框表现得就像浮动框不存在一样。</p>
<h4 id="浮动带来的副作用"><a href="#浮动带来的副作用" class="headerlink" title="浮动带来的副作用"></a>浮动带来的副作用</h4><ul>
<li>块状元素，会钻进浮动元素的下面，被浮动元素所覆盖；</li>
<li>行内元素，例如文字，则会环绕在浮动元素的周围，为浮动元素留出空间呢；</li>
<li>浮动元素的父元素会出现坍缩；<br>如果不希望出现以上这些效果，就需要清楚浮动来解决后患，使后面的元素表现得跟浮动前一样，这样既实现了元素的浮动，又使后来的元素不会受其影响产生不必要的麻烦。</li>
</ul>
<h4 id="清楚浮动常用的5中方法"><a href="#清楚浮动常用的5中方法" class="headerlink" title="清楚浮动常用的5中方法"></a>清楚浮动常用的5中方法</h4><p>清楚浮动的方法有很多种，本文中只记录了常用的5种。</p>
<h5 id="父级div定义height"><a href="#父级div定义height" class="headerlink" title="父级div定义height"></a>父级div定义height</h5><ul>
<li>原理：父级div手动定义height，就解决了父级div无法自动获取到高度的问题；</li>
<li>优点：简单、代码少、容易掌握；</li>
<li>缺点：只适合高度固定的布局，要给出精确的高度，如果高度和父级div不一样时，会产生问题；</li>
<li>实现代码：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE HTML&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</div><div class="line">    &lt;title&gt;清楚浮动：父级div定义height&lt;/title&gt;</div><div class="line">    &lt;style type=&quot;text/css&quot;&gt;</div><div class="line">       .div1&#123;</div><div class="line">       	   background-color: #762564;</div><div class="line">       	   border:1px solid #ccc;</div><div class="line">       	   color: #fff;</div><div class="line">       	   /*清除浮动代码*/</div><div class="line">       	   height: 200px;</div><div class="line">       &#125;</div><div class="line">       .div2&#123;</div><div class="line">       	   background-color: #656532;</div><div class="line">       	   border:1px solid #ddd;</div><div class="line">       	   height: 100px;</div><div class="line">       	   margin-top: 10px;</div><div class="line">       	   color: #fff;</div><div class="line">       &#125;</div><div class="line">       .left&#123;</div><div class="line">       	   float: left;</div><div class="line">       	   width: 20%;</div><div class="line">       	   height: 200px;</div><div class="line">       	   background: red;</div><div class="line">       &#125;</div><div class="line">       .right&#123;</div><div class="line">       	   float: right;</div><div class="line">       	   width: 30%;</div><div class="line">       	   height: 80px;</div><div class="line">       	   background: green;</div><div class="line">       &#125;</div><div class="line">    &lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">   &lt;div class=&quot;div1&quot;&gt;</div><div class="line">   	   &lt;div class=&quot;left&quot;&gt;Left&lt;/div&gt;</div><div class="line">   	   &lt;div class=&quot;right&quot;&gt;Right&lt;/div&gt;</div><div class="line">   &lt;/div&gt;</div><div class="line">   &lt;div class=&quot;div2&quot;&gt;div2&lt;/div&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="结尾处加空div标签，clear-both"><a href="#结尾处加空div标签，clear-both" class="headerlink" title="结尾处加空div标签，clear:both"></a>结尾处加空div标签，clear:both</h5><ul>
<li>原理：添加一个空div，利用css提供的clear:both清楚浮动，让父级div能自动获取到高度；</li>
<li>优点：简单、代码少、浏览器支持好、不容易出现奇怪的问题；</li>
<li>缺点：如果页面浮动布局多，就要增加很多空div；</li>
<li>实现代码：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE HTML&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</div><div class="line">    &lt;title&gt;结尾处加空div标签clear both &lt;/title&gt;</div><div class="line">    &lt;style type=&quot;text/css&quot;&gt;</div><div class="line">       .div1&#123;</div><div class="line">       	   background-color: #762564;</div><div class="line">       	   border:1px solid #ccc;</div><div class="line">       	   color: #fff;</div><div class="line">       &#125;</div><div class="line">       .div2&#123;</div><div class="line">       	   background-color: #656532;</div><div class="line">       	   border:1px solid #ddd;</div><div class="line">       	   height: 100px;</div><div class="line">       	   margin-top: 10px;</div><div class="line">       	   color: #fff;</div><div class="line">       &#125;</div><div class="line">       .left&#123;</div><div class="line">       	   float: left;</div><div class="line">       	   width: 20%;</div><div class="line">       	   height: 200px;</div><div class="line">       	   background: red;</div><div class="line">       &#125;</div><div class="line">       .right&#123;</div><div class="line">       	   float: right;</div><div class="line">       	   width: 30%;</div><div class="line">       	   height: 80px;</div><div class="line">       	   background: green;</div><div class="line">       &#125;</div><div class="line">       /*清楚浮动代码*/</div><div class="line">       .clearfloat&#123;</div><div class="line">       	   clear:both;</div><div class="line">       &#125;</div><div class="line">    &lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">   &lt;div class=&quot;div1&quot;&gt;</div><div class="line">   	   &lt;div class=&quot;left&quot;&gt;Left&lt;/div&gt;</div><div class="line">   	   &lt;div class=&quot;right&quot;&gt;Right&lt;/div&gt;</div><div class="line">   	   &lt;div class=&quot;clearfloat&quot;&gt;&lt;/div&gt;    &lt;!--结尾处加空标签--&gt;</div><div class="line">   &lt;/div&gt;</div><div class="line">   &lt;div class=&quot;div2&quot;&gt;div2&lt;/div&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="父级div定义，伪类-after和zoom"><a href="#父级div定义，伪类-after和zoom" class="headerlink" title="父级div定义，伪类 :after和zoom"></a>父级div定义，伪类 :after和zoom</h5><ul>
<li>原理：IE8以上和非IE浏览器才支持 :after，原理和方法2有些类似，zoom(IE专有属性)可解决IE6、IE7浮动问题；</li>
<li>优点：浏览器支持好、不容易出现奇怪的问题(目前：大型网站都有使用)；</li>
<li>缺点：代码多(定义公共类可减少代码)，要两句代码结合使用才能让主流浏览器都支持；</li>
<li>实现代码：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE HTML&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</div><div class="line">    &lt;title&gt;结尾处加空div标签clear both &lt;/title&gt;</div><div class="line">    &lt;style type=&quot;text/css&quot;&gt;</div><div class="line">       .div1&#123;</div><div class="line">       	   background-color: #762564;</div><div class="line">       	   border:1px solid #ccc;</div><div class="line">       	   color: #fff;</div><div class="line">       &#125;</div><div class="line">       .div2&#123;</div><div class="line">       	   background-color: #656532;</div><div class="line">       	   border:1px solid #ddd;</div><div class="line">       	   height: 100px;</div><div class="line">       	   margin-top: 10px;</div><div class="line">       	   color: #fff;</div><div class="line">       &#125;</div><div class="line">       .left&#123;</div><div class="line">       	   float: left;</div><div class="line">       	   width: 20%;</div><div class="line">       	   height: 200px;</div><div class="line">       	   background: red;</div><div class="line">       &#125;</div><div class="line">       .right&#123;</div><div class="line">       	   float: right;</div><div class="line">       	   width: 30%;</div><div class="line">       	   height: 80px;</div><div class="line">       	   background: green;</div><div class="line">       &#125;</div><div class="line">       /*清除浮动代码*/</div><div class="line">       .clearfloat:after&#123;</div><div class="line">       	   display: block;</div><div class="line">       	   clear: both;</div><div class="line">       	   content: &quot;&quot;;</div><div class="line">       	   visibility: hidden;</div><div class="line">       	   height: 0;</div><div class="line">       &#125;</div><div class="line">       .clearfloat&#123;</div><div class="line">       	   zoom: 1;</div><div class="line">       &#125;</div><div class="line">    &lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">   &lt;div class=&quot;div1 clearfloat&quot;&gt;</div><div class="line">   	   &lt;div class=&quot;left&quot;&gt;Left&lt;/div&gt;</div><div class="line">   	   &lt;div class=&quot;right&quot;&gt;Right&lt;/div&gt;</div><div class="line">   &lt;/div&gt;</div><div class="line">   &lt;div class=&quot;div2&quot;&gt;div2&lt;/div&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="父级div定义，overflow-hidden"><a href="#父级div定义，overflow-hidden" class="headerlink" title="父级div定义，overflow:hidden"></a>父级div定义，overflow:hidden</h5><ul>
<li>原理：必须定义width或zoom:1，同时不能定义height，使用overflow:hidden时，浏览器会自动检查浮动区域的高度；</li>
<li>优点：简单、代码少、浏览器支持好；</li>
<li>缺点：不能喝position配合使用，因为超出的尺寸会被隐藏；</li>
<li>实现代码：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE HTML&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</div><div class="line">    &lt;title&gt;父级div定义 overflow:hidden&lt;/title&gt;</div><div class="line">    &lt;style type=&quot;text/css&quot;&gt;</div><div class="line">       .div1&#123;</div><div class="line">       	   background-color: #762564;</div><div class="line">       	   border:1px solid #ccc;</div><div class="line">       	   color: #fff;</div><div class="line">       	   /*清除浮动代码*/</div><div class="line">       	   width: 100%;</div><div class="line">       	   overflow: hidden;</div><div class="line">       &#125;</div><div class="line">       .div2&#123;</div><div class="line">       	   background-color: #656532;</div><div class="line">       	   border:1px solid #ddd;</div><div class="line">       	   height: 100px;</div><div class="line">       	   margin-top: 10px;</div><div class="line">       	   color: #fff;</div><div class="line">       &#125;</div><div class="line">       .left&#123;</div><div class="line">       	   float: left;</div><div class="line">       	   width: 20%;</div><div class="line">       	   height: 200px;</div><div class="line">       	   background: red;</div><div class="line">       &#125;</div><div class="line">       .right&#123;</div><div class="line">       	   float: right;</div><div class="line">       	   width: 30%;</div><div class="line">       	   height: 80px;</div><div class="line">       	   background: green;</div><div class="line">       &#125;</div><div class="line"></div><div class="line"></div><div class="line">    &lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">   &lt;div class=&quot;div1 clearfloat&quot;&gt;</div><div class="line">   	   &lt;div class=&quot;left&quot;&gt;Left&lt;/div&gt;</div><div class="line">   	   &lt;div class=&quot;right&quot;&gt;Right&lt;/div&gt;</div><div class="line">   &lt;/div&gt;</div><div class="line">   &lt;div class=&quot;div2&quot;&gt;div2&lt;/div&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="父级div定义-overflow-auto"><a href="#父级div定义-overflow-auto" class="headerlink" title="父级div定义 overflow:auto"></a>父级div定义 overflow:auto</h5><ul>
<li>原理：必须定义width或zoom:1，同时不能定义height，使用overflow:auto时，浏览器会自动检查浮动区域的高度；</li>
<li>优点：简单、代码少、浏览器支持好；</li>
<li>缺点：内部宽高超过父级div时，会出现滚动条；</li>
<li>实现代码：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE HTML&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</div><div class="line">    &lt;title&gt;父级div定义 overflow:auto&lt;/title&gt;</div><div class="line">    &lt;style type=&quot;text/css&quot;&gt;</div><div class="line">       .div1&#123;</div><div class="line">       	   background-color: #762564;</div><div class="line">       	   border:1px solid #ccc;</div><div class="line">       	   color: #fff;</div><div class="line">       	   /*清除浮动代码*/</div><div class="line">       	   width: 98%;</div><div class="line">       	   overflow: auto;</div><div class="line">       &#125;</div><div class="line">       .div2&#123;</div><div class="line">       	   background-color: #656532;</div><div class="line">       	   border:1px solid #ddd;</div><div class="line">       	   height: 100px;</div><div class="line">       	   margin-top: 10px;</div><div class="line">       	   color: #fff;</div><div class="line">       &#125;</div><div class="line">       .left&#123;</div><div class="line">       	   float: left;</div><div class="line">       	   width: 20%;</div><div class="line">       	   height: 200px;</div><div class="line">       	   background: red;</div><div class="line">       &#125;</div><div class="line">       .right&#123;</div><div class="line">       	   float: right;</div><div class="line">       	   width: 30%;</div><div class="line">       	   height: 80px;</div><div class="line">       	   background: green;</div><div class="line">       &#125;</div><div class="line">    &lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">   &lt;div class=&quot;div1 clearfloat&quot;&gt;</div><div class="line">   	   &lt;div class=&quot;left&quot;&gt;Left&lt;/div&gt;</div><div class="line">   	   &lt;div class=&quot;right&quot;&gt;Right&lt;/div&gt;</div><div class="line">   &lt;/div&gt;</div><div class="line">   &lt;div class=&quot;div2&quot;&gt;div2&lt;/div&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;浮动-Float&quot;&gt;&lt;a href=&quot;#浮动-Float&quot; class=&quot;headerlink&quot; title=&quot;浮动(Float)&quot;&gt;&lt;/a&gt;浮动(Float)&lt;/h4&gt;&lt;p&gt;css中的浮动(float)，会使元素向左或向右浮动，直到它的外边缘碰到包含框或者另一个
    
    </summary>
    
      <category term="CSS" scheme="http://yoursite.com/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
      <category term="float" scheme="http://yoursite.com/tags/float/"/>
    
  </entry>
  
  <entry>
    <title>position的四个属性</title>
    <link href="http://yoursite.com/2017/07/19/position%E7%9A%84%E5%9B%9B%E4%B8%AA%E5%B1%9E%E6%80%A7/"/>
    <id>http://yoursite.com/2017/07/19/position的四个属性/</id>
    <published>2017-07-19T02:18:31.000Z</published>
    <updated>2017-07-19T10:00:16.799Z</updated>
    
    <content type="html"><![CDATA[<h4 id="position的四个属性"><a href="#position的四个属性" class="headerlink" title="position的四个属性"></a>position的四个属性</h4><h5 id="static"><a href="#static" class="headerlink" title="static"></a>static</h5><p>默认值，没有定位，元素出现在正常文档流当中；</p>
<h5 id="absolute"><a href="#absolute" class="headerlink" title="absolute:"></a>absolute:</h5><p>绝对定位，相对于其最近一个具有定位属性的父包含块进行定位，如果不存在这样的包含块，则相对于body元素；<br>可以用left、right、top、bottom来确定元素的位置；<br>不在z-index保留占位符，脱离文档流；<br>会隐性改变display属性值为inline-block；</p>
<h5 id="relative"><a href="#relative" class="headerlink" title="relative"></a>relative</h5><p>相对定位，相对于以前的位置进行定位，不脱离文档流；</p>
<h5 id="fixed"><a href="#fixed" class="headerlink" title="fixed"></a>fixed</h5><p>固定定位，相对于浏览器窗口进行定位，不随滚动条的移动而改变位置；脱离文档流；</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;position的四个属性&quot;&gt;&lt;a href=&quot;#position的四个属性&quot; class=&quot;headerlink&quot; title=&quot;position的四个属性&quot;&gt;&lt;/a&gt;position的四个属性&lt;/h4&gt;&lt;h5 id=&quot;static&quot;&gt;&lt;a href=&quot;#sta
    
    </summary>
    
      <category term="CSS" scheme="http://yoursite.com/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
      <category term="position" scheme="http://yoursite.com/tags/position/"/>
    
  </entry>
  
  <entry>
    <title>如何向github提交代码？</title>
    <link href="http://yoursite.com/2017/07/18/%E5%A6%82%E4%BD%95%E5%90%91github%E6%8F%90%E4%BA%A4%E4%BB%A3%E7%A0%81%EF%BC%9F/"/>
    <id>http://yoursite.com/2017/07/18/如何向github提交代码？/</id>
    <published>2017-07-18T14:31:13.000Z</published>
    <updated>2017-07-18T15:48:45.121Z</updated>
    
    <content type="html"><![CDATA[<p>有Github账号，就可以提交代码了吗？(一开始我也是这么认为的)<br>Github一般都是基于SSH授权的，本文针对 <strong>Windows</strong> 系统，记录了如何向Github提交代码。</p>
<h4 id="安装Git工具"><a href="#安装Git工具" class="headerlink" title="安装Git工具"></a>安装Git工具</h4><p>下载地址：<a href="https://git-for-windows.github.io/" target="_blank" rel="external">点我</a>下载后，一直默认 <strong>next</strong> 安装即可。<br><img src="/img/2017-07-18_001.png" alt="Git工具"></p>
<h4 id="创建新项目，copy地址"><a href="#创建新项目，copy地址" class="headerlink" title="创建新项目，copy地址"></a>创建新项目，copy地址</h4><p>进入Github首页，创建一个新的项目(具体教程见Github首页Read the guide)；点击 <strong>Clone or download</strong> 按钮，赋值出现的地址备之后用。<br><img src="/img/2017-07-18_002.png" alt="copy地址"></p>
<h4 id="生成SSH-key"><a href="#生成SSH-key" class="headerlink" title="生成SSH key"></a>生成SSH key</h4><p>在本地电脑中找到之前安装的git工具，双击里面的 <strong>git-bash.exe</strong> <img src="/img/2017-07-18_003.png" alt="git-bash"><br>输入命令：<strong>ssh</strong>，如果出现如下界面，则表示本电脑已经安装了SSH。<br><img src="/img/2017-07-18_004.png" alt="成功界面"><br>接着输入命令 <strong>ssh-keygen -t rsa</strong>(指定rsa算法生成密钥)，连续敲三个回车，生成两个文件： <strong>id_rsa</strong>(密钥)和 <strong>id_rsa.pub</strong>(公钥)，这两个文件都在c/Users/Administrator/.ssh目录下，可以用Sublime打开(其他也可以，这里请自行百度)。</p>
<h4 id="在Github上添加SSH-key"><a href="#在Github上添加SSH-key" class="headerlink" title="在Github上添加SSH key"></a>在Github上添加SSH key</h4><p>进入Github的设置页面，点击左侧选项栏中的 <strong>SSH and GPG keys</strong>，再点击 <strong>new SSH key</strong>，把上一步中的 <strong>id_rsa.pub</strong>(公钥)中的内容粘贴到 <strong>Key</strong> 那一栏， <strong>Title</strong> 栏不需要填写，直接点击 <strong>Add SSH key</strong> 即可。<br><img src="/img/2017-07-18_005.png" alt="添加SSH key"><br>这样，本地的id_rsa密钥和Github上的id_rsa.pub公钥就可以进行配对，授权成功才可以提交代码。<br>SSH key添加成功之后，输入命令： <strong>ssh -T git@github.com</strong> 进行测试，如果出现如下提示，则表示添加成功。<br><img src="/img/2017-07-18_006.png" alt="提示"></p>
<h4 id="提交代码"><a href="#提交代码" class="headerlink" title="提交代码"></a>提交代码</h4><p>首先，右键你要上传的项目，会出现两个选项：Git Gui Here和Git Bash Here，选择 <strong>Git Bash Here</strong> ，进入如下界面：这里Lottery就是我要上传的项目。<br><img src="/img/2017-07-18_007.png" alt="Git Bash Here"></p>
<h5 id="把Github上面的仓库clone到本地"><a href="#把Github上面的仓库clone到本地" class="headerlink" title="把Github上面的仓库clone到本地"></a>把Github上面的仓库clone到本地</h5><p>输入命令： <strong>git clone <a href="https://github.com/Maizi93/test.git" target="_blank" rel="external">https://github.com/Maizi93/test.git</a></strong> (这个地址就是之前复制备用的地址)，此时你会发现本地文件夹中会多出一个文件夹(test)，把项目文件夹中的其余所有，都赋值到这个多出来的文件夹(test)中。<br><img src="/img/2017-07-18_008.png" alt="clone到本地">  <img src="/img/2017-07-18_009.png" alt="本地文件夹"></p>
<h5 id="提交并push到github上"><a href="#提交并push到github上" class="headerlink" title="提交并push到github上"></a>提交并push到github上</h5><p>依次输入以下命令：<br><strong>cd test</strong> ———— 进入test文件夹<br><strong>git add .</strong> ———— 把test文件夹下面的文件都添加进来， <em>注意：add后面还有一个点（.），千万别忘记了！</em><br><strong>git commit -m “提交信息”</strong> ———— “提交信息”里面换成你需要的，如”first commit”<br><strong>git push -u origin master</strong> ———— 把本地仓库push到github上面， <em>注意：这里需要你输入Github的账号和密码</em><br><img src="/img/2017-07-18_010.png" alt="相关命令行"></p>
<h5 id="完成代码提交"><a href="#完成代码提交" class="headerlink" title="完成代码提交"></a>完成代码提交</h5><p>到Github上test这个repository下面，就可以看到已经提交了你的项目相关内容。<br><img src="/img/2017-07-18_011.png" alt="完成提交"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有Github账号，就可以提交代码了吗？(一开始我也是这么认为的)&lt;br&gt;Github一般都是基于SSH授权的，本文针对 &lt;strong&gt;Windows&lt;/strong&gt; 系统，记录了如何向Github提交代码。&lt;/p&gt;
&lt;h4 id=&quot;安装Git工具&quot;&gt;&lt;a href=&quot;
    
    </summary>
    
      <category term="前端工具" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
</feed>
